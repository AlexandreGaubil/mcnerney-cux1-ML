


CUX1 RELATED GENES



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Average accuracy: 0.6548484848484849
     Standard deviation: 0.030048128248251076



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Average accuracy: 0.5919313944817302
     Standard deviation: 0.0311322241168891



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(100, 20))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (100, 20), 'solver': 'adam'}
     Starting run of that model with optimal parameters...



MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(100, 20))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Average accuracy: 0.6426767676767676
     Standard deviation: 0.045454545454545456



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Best estimator: MLPClassifier(alpha=1e-05, hidden_layer_sizes=(250, 100))
     Best parameters: {'alpha': 1e-05, 'hidden_layer_sizes': (250, 100), 'solver': 'adam'}
     Starting run of that model with optimal parameters...



MODEL --- MLPClassifier(alpha=1e-05, hidden_layer_sizes=(250, 100))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Average accuracy: 0.592841163310962
     Standard deviation: 0.02163208009598849



CUX1 RELATED GENES



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.719621212121212
     Standard deviation: 0.02390256564948832



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.6622147651006712
     Standard deviation: 0.026800381316671153



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(250, 100))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (250, 100), 'solver': 'adam'}
     Starting run of that model with optimal parameters...



MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(250, 100))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.6856060606060606
     Standard deviation: 0.0



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Best estimator: MLPClassifier(alpha=5, hidden_layer_sizes=(250, 30))
     Best parameters: {'alpha': 5, 'hidden_layer_sizes': (250, 30), 'solver': 'adam'}
     Starting run of that model with optimal parameters...



MODEL --- MLPClassifier(alpha=5, hidden_layer_sizes=(250, 30))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.6308724832214765
     Standard deviation: 0.0



CUX1 RELATED GENES



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.7253030303030303
     Standard deviation: 0.025971040593225157



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.6821476510067113
     Standard deviation: 0.020134675610241227



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(150, 50))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (150, 50), 'solver': 'adam'}
     Starting run of that model with optimal parameters...



MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(150, 50))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.7159090909090909
     Standard deviation: 0.0



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Best estimator: MLPClassifier(alpha=1e-05, hidden_layer_sizes=(150, 50))
     Best parameters: {'alpha': 1e-05, 'hidden_layer_sizes': (150, 50), 'solver': 'adam'}
     Starting run of that model with optimal parameters...



MODEL --- MLPClassifier(alpha=1e-05, hidden_layer_sizes=(150, 50))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']

     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling

     Average accuracy: 0.6778523489932886
     Standard deviation: 0.0



CUX1 RELATED GENES DEGS



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
     Average accuracy: 0.7299074074074073
     Standard deviation: 0.02571377434815146



MODEL --- LogisticRegression(C=0.008, max_iter=1000, multi_class='multinomial', n_jobs=-1,
                   solver='saga')
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
     Average accuracy: 0.678076062639821
     Standard deviation: 0.025173501712216648



MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
