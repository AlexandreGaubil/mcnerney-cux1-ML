


CUX1 RELATED GENES

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Best estimator: MLPClassifier(alpha=1e-05, hidden_layer_sizes=(250, 30))
     Best parameters: {'alpha': 1e-05, 'hidden_layer_sizes': (250, 30), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=1e-05, hidden_layer_sizes=(250, 30))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Average accuracy: 0.6512794612794612
     Standard deviation: 0.030915660085499487

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Best estimator: MLPClassifier(alpha=9, hidden_layer_sizes=(250, 100))
     Best parameters: {'alpha': 9, 'hidden_layer_sizes': (250, 100), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=9, hidden_layer_sizes=(250, 100))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt']
     Average accuracy: 0.5845563012677106
     Standard deviation: 0.03234863658936218

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Best estimator: MLPClassifier(alpha=1, hidden_layer_sizes=(100, 20))
     Best parameters: {'alpha': 1, 'hidden_layer_sizes': (100, 20), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=1, hidden_layer_sizes=(100, 20))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Average accuracy: 0.7048484848484848
     Standard deviation: 0.027987682585240873

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Best estimator: MLPClassifier(alpha=5, hidden_layer_sizes=(250, 100))
     Best parameters: {'alpha': 5, 'hidden_layer_sizes': (250, 100), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=5, hidden_layer_sizes=(250, 100))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/molly_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Average accuracy: 0.6571812080536914
     Standard deviation: 0.024061689705639402

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(250, 30))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (250, 30), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(250, 30))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Average accuracy: 0.7231818181818181
     Standard deviation: 0.0248022481874429

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(250, 30))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (250, 30), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(250, 30))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/jeff_cux1_biding_targets.txt', './../../data/input/gene_sets/weihan_cux1_biding_intersect.txt']
     Warning: Unable to sample dataframe, less than 1,000 columns. Will proceed without sampling
     Average accuracy: 0.6767114093959731
     Standard deviation: 0.02628277380547873



CUX1 RELATED GENES DEGS

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/Molly_shCux1_bulk_RNA_DEGs.txt']
     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(150, 50))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (150, 50), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(150, 50))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/Molly_shCux1_bulk_RNA_DEGs.txt']
     Average accuracy: 0.728013468013468
     Standard deviation: 0.029600867008287166

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/Molly_shCux1_bulk_RNA_DEGs.txt']
     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(150, 50))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (150, 50), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(150, 50))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/Molly_shCux1_bulk_RNA_DEGs.txt']
     Average accuracy: 0.6785011185682326
     Standard deviation: 0.026783195464303952

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
     Best estimator: MLPClassifier(alpha=11, hidden_layer_sizes=(250, 30))
     Best parameters: {'alpha': 11, 'hidden_layer_sizes': (250, 30), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=11, hidden_layer_sizes=(250, 30))
     Data file: ./../../data/output/export_script/three_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
     Average accuracy: 0.7296717171717172
     Standard deviation: 0.029106479506640477

MODEL --- GridSearchCV(estimator=MLPClassifier(), n_jobs=-1,
             param_grid={'alpha': [1e-05, 0.72, 1, 5, 9, 11],
                         'hidden_layer_sizes': [(100, 20), (250, 100),
                                                (250, 30), (150, 50)],
                         'solver': ['adam']})
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
     Best estimator: MLPClassifier(alpha=1e-05, hidden_layer_sizes=(150, 50))
     Best parameters: {'alpha': 1e-05, 'hidden_layer_sizes': (150, 50), 'solver': 'adam'}
     Starting run of that model with optimal parameters...

MODEL --- MLPClassifier(alpha=1e-05, hidden_layer_sizes=(150, 50))
     Data file: ./../../data/output/export_script/all_cells_all_genes_data_headers.txt
     Genes files: ['./../../data/input/gene_sets/wl001_shRNA_LowRen_DEGs.txt']
     Average accuracy: 0.6631394481730053
     Standard deviation: 0.02715172774176202
